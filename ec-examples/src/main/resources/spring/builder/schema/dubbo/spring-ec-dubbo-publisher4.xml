<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 这个示例演示了，spring的配置中，publish直接连接两个不同group和version的eventTransmission -->
    <bean class="eventcenter.builder.ExampleService"></bean>
	<context:component-scan base-package="eventcenter.builder.listeners"></context:component-scan>
	<context:component-scan base-package="eventcenter.api"></context:component-scan>

	<!-- 设置这个主要是开启 事件中心的注解方式的事件 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 这个是配置了dubbo的publisher，通过静态的方式，直接在publisher中加入远程端的subscriber坐标 -->
	<!-- 这里只需要在conf的group中设置，如果针对不同的publish设置不同的group，需要在dubboPublish中进行配置 -->
	<conf group="test" xmlns="http://code.eventcenter.com/schema/ec" xsi:schemaLocation="http://code.eventcenter.com/schema/ec http://code.eventcenter.com/schema/ec/eventcenter.xsd">
		<dubbo applicationName="builder-test" applicationOwner="jackyLiu" registryAddress="localhost:2181" registryProtocol="zookeeper">
			<dubboPublish asyncFireRemote="true" subscriberAutowired="true">
				<dubboPublishGroup group="test1" remoteEvents="example.manual">
					<eventTransmission version="subscriber-test1" registry="false"/>
				</dubboPublishGroup>
				<dubboPublishGroup group="test2" remoteEvents="example.annotation">
					<eventTransmission version="subscriber-test2" registry="false"/>
				</dubboPublishGroup>
			</dubboPublish>
		</dubbo>
		<saf>
			<simpleSaf checkInterval="10000" storeOnSendFail="true"></simpleSaf>
		</saf>
	</conf>
</beans>
