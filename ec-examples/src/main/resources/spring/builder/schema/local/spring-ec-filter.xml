<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean class="eventcenter.builder.ExampleService"></bean>
	<!-- filter的配置，不需要配置在conf中，只需注入到spring的容器，并在这个类上面加上@EventFilterable注解即可 -->
	<bean class="eventcenter.filter.listeners.SingleFilter"></bean>
	<!-- 这个过滤器设置了isGlobal的属性，他是全局过滤器，任何事件都会经过它 -->
	<bean class="eventcenter.filter.listeners.GlobalFilter"></bean>
	<context:component-scan base-package="eventcenter.builder.listeners"></context:component-scan>
	<context:component-scan base-package="eventcenter.api"></context:component-scan>

	<!-- 设置这个主要是开启 事件中心的注解方式的事件 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 这个是最基础的配置，默认初始化DefaultEventCenter实例 -->
	<conf xmlns="http://code.eventcenter.com/schema/ec" xsi:schemaLocation="http://code.eventcenter.com/schema/ec http://code.eventcenter.com/schema/ec/eventcenter.xsd">

	</conf>
</beans>
